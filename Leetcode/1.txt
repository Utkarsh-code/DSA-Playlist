class Solution {
int cnt=0;
public:
    int getKth(int lo, int hi, int k) {

map<int, vector<int>> mp;  
      
for(int i=lo; i<=hi; i++){
  cnt=0;
  dfs(i);
  mp[cnt].push_back(i);}

int sz=mp.size();
cnt=k;
k=sz-k+1;

for(auto i:mp){
   k--;
  if(k==0){
    sort(mp[i.first].begin(), mp[i.first].end());
    return mp[i.first][cnt-1];}
}

}

    }
void dfs(int v){
  if(v==1) return;
   cnt++;
    
   if(v%2==0) dfs(v/2);
   else dfs(3*v+1);}

};